import java.io.IOException;
import java.io.OutputStream;
import java.math.BigDecimal;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

import org.json.JSONArray;
import org.json.JSONObject;

public class NetworthChecker {
    private static final String API_KEY = "YOUR_API_KEY_HERE";
    private static final String API_BASE_URL = "https://api.hypixel.net/";
    private static final String WEBHOOK_URL = "YOUR_WEBHOOK_URL_HERE";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter player UUID: ");
        String playerUuid = scanner.nextLine();

        try {
            // Get player data
            JSONObject playerData = getPlayerData(playerUuid);
            if (playerData == null) {
                System.out.println("Error: Player not found");
                return;
            }

            // Get Skyblock profile
            JSONObject skyblockProfile = playerData.getJSONObject("skyBlockProfile");

            // Calculate networth
            BigDecimal networth = calculateNetworth(skyblockProfile);

            // Send networth to Discord webhook
            sendToWebhook(networth);

            // Print result
            System.out.println("Networth sent to Discord webhook");
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }

    private static void sendToWebhook(BigDecimal networth) throws IOException {
        // Create JSON payload
        JSONObject payload = new JSONObject();
        payload.put("content", "Networth: " + networth);

        // Send POST request to webhook URL
        URL url = new URL(WEBHOOK_URL);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setDoOutput(true);
        connection.setRequestProperty("Content-Type", "application/json");
        OutputStream os = connection.getOutputStream();
        os.write(payload.toString().getBytes());
        os.flush();
        os.close();

        // Check response code
        int responseCode = connection.getResponseCode();
        if (responseCode != 204) {
            throw new IOException("Webhook request failed with status code " + responseCode);
        }
    }

    private static JSONObject getPlayerData(String playerUuid) throws IOException {
        String url = API_BASE_URL + "player?key=" + API_KEY + "&uuid=" + playerUuid;
        String response = getUrlContents(url);
        JSONObject json = new JSONObject(response);
        if (json.getBoolean("success")) {
            return json.getJSONObject("player");
        } else {
            return null;
        }
    }

    private static BigDecimal calculateNetworth
